#
# StartOS package build script
#
# Copyright 2012 StartOS
# Distributed under the terms of the GNU General Public License v2
#

DESCRIPTION="GNU libc6 (also called glibc2) C library"
HOMEPAGE="http://www.gnu.org/software/libc/libc.html"
LICENSE="GPL,LGPL"
PACKAGER="Zhongxin Huang <huangzhongxin@ivali.com>"
PRIORITY="required"

SRC_URI="http://ftp.gnu.org/gnu/libc/"$N-$V".tar.xz"
CHECKSUM="87bf675c8ee523ebda4803e8e1cec638"

RDEPEND=""
BDEPEND=""

# for backtraces, such as: valgrind will not work if glibc 
# does not have debug symbols.
OPTIONS="nostrip"

INSTALL="$N-$V.install"

NOTES="1.linux-headers->glibc->binutils->gcc->binutils->glibc 
       2. valgrind requires rebuilt with each major glibc version"

pbs_unpack() {
    dounpack
}

pbs_config() {
    # Hack to fix NPTL issues with Xen, only required on 32bit platforms
    case "$ARCH" in
      i686)   export CFLAGS="${CFLAGS} -mno-tls-direct-seg-refs" ;;
      x86_64) echo "slibdir=/lib64" >>configparms
    esac

    # Remove hardening options from CFLAGS for building libraries
    CFLAGS=${CFLAGS/-fstack-protector/}
    CFLAGS=${CFLAGS/-D_FORTIFY_SOURCE=2/}

    mkdir -p "$N"-build && cd "$N"-build && rm * -rf

    unset ARCH
    
    config+="--with-headers=/usr/include 
             --enable-add-ons=nptl,libidn 
             --enable-obsolete-rpc 
             --enable-kernel=2.6.32 
             --enable-bind-now 
             --enable-stackguard-randomization
             --enable-multi-arch          
             --disable-profile"
    ../configure $config
}

pbs_build() {
    # Build libraries with hardening disabled
    echo "build-programs=no" >> configparms
    domake

    # Re-enable hardening for programs
    sed -i "/build-programs=/s#no#yes#" configparms
    echo "CC += -fstack-protector -D_FORTIFY_SOURCE=2" >> configparms
    echo "CXX += -fstack-protector -D_FORTIFY_SOURCE=2" >> configparms
    domake

    # Remove harding in preparation to run test-suite
    sed -i '2,4d' configparms
}

pbs_install() {
    make install_root="$PKGDIR" install
    cd "$PKGDIR"
    docp "$FILESDIR"/locale-gen usr/sbin
    docp "$FILESDIR"/SUPPORTED  usr/share/i18n
    doln /usr/include/utime.h usr/include/sys/utime.h
    # Remove default localtime 
    rm -rf etc/localtime
    # 
    rm -rf etc/ld.so.cache
    # FIXME
    # these binary need libz, libgd 
    # makes circular dependency happend.
    rm usr/bin/{memusagestat,memusage}
    # locale-gen needs
    mkdir -p usr/lib"$LIBDIRSUFFIX"/locale
}
